package view;

import controller.ConexaoDB;
import controller.ControllerCategoriaProdutos;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import model.ModelCategoriaProdutos;
import model.ModelTabela;


public class FrmCategoriaProdutos extends javax.swing.JFrame {
    
     ConexaoDB conectaCategoriaProdutos = new ConexaoDB();
     ModelCategoriaProdutos mcatprod = new ModelCategoriaProdutos();
     ControllerCategoriaProdutos controlCatProd = new ControllerCategoriaProdutos();
     int flag = 0;
     
     

    /**
     * Creates new form FrmCategoriaEventos
     */
    public FrmCategoriaProdutos() {
        initComponents();
        
        
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/ss.jpg")).getImage());
        
        //conectaCategoriaEventos.conexao();
        
        
        preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        aaa = new javax.swing.JLabel();
        dddd = new javax.swing.JLabel();
        txtCodCatProd = new javax.swing.JTextField();
        txtNomedaCategoriaProd = new javax.swing.JTextField();
        btnPesquisarCatProd = new javax.swing.JButton();
        txtCampoPesquisaCatProd = new javax.swing.JTextField();
        btnNovoCatProd = new javax.swing.JButton();
        btnSalvarCatProd = new javax.swing.JButton();
        btnAlterarCatProd = new javax.swing.JButton();
        btnExcluirCatProd = new javax.swing.JButton();
        btnCancelarCatProd = new javax.swing.JButton();
        btnSairCatProd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCategoriaProdutos = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Categoria de Produtos");
        setBackground(javax.swing.UIManager.getDefaults().getColor("ComboBox.selectionBackground"));
        setResizable(false);

        aaa.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        aaa.setText("Cod:");

        dddd.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        dddd.setText("Nome da Categoria*:");

        txtCodCatProd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCodCatProd.setEnabled(false);

        txtNomedaCategoriaProd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNomedaCategoriaProd.setEnabled(false);

        btnPesquisarCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnPesquisarCatProd.setText("Buscar");
        btnPesquisarCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPesquisarCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCatProdActionPerformed(evt);
            }
        });

        txtCampoPesquisaCatProd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnNovoCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnNovoCatProd.setText("Novo");
        btnNovoCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNovoCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCatProdActionPerformed(evt);
            }
        });

        btnSalvarCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnSalvarCatProd.setText("Salvar");
        btnSalvarCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvarCatProd.setEnabled(false);
        btnSalvarCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCatProdActionPerformed(evt);
            }
        });

        btnAlterarCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnAlterarCatProd.setText("Alterar");
        btnAlterarCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarCatProd.setEnabled(false);
        btnAlterarCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarCatProdActionPerformed(evt);
            }
        });

        btnExcluirCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnExcluirCatProd.setText("Excluir");
        btnExcluirCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluirCatProd.setEnabled(false);
        btnExcluirCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCatProdActionPerformed(evt);
            }
        });

        btnCancelarCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnCancelarCatProd.setText("Cancelar");
        btnCancelarCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarCatProd.setEnabled(false);
        btnCancelarCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCatProdActionPerformed(evt);
            }
        });

        btnSairCatProd.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnSairCatProd.setText("Sair");
        btnSairCatProd.setToolTipText("Fechar janela");
        btnSairCatProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSairCatProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairCatProdActionPerformed(evt);
            }
        });

        jTableCategoriaProdutos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableCategoriaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCategoriaProdutos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableCategoriaProdutos.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTableCategoriaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCategoriaProdutosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableCategoriaProdutos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(txtCampoPesquisaCatProd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarCatProd))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(aaa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dddd, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodCatProd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomedaCategoriaProd, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcluirCatProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelarCatProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovoCatProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalvarCatProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterarCatProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSairCatProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnNovoCatProd)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvarCatProd)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterarCatProd)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirCatProd)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarCatProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSairCatProd))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aaa, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodCatProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dddd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomedaCategoriaProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPesquisarCatProd)
                            .addComponent(txtCampoPesquisaCatProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(0, 39, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(407, 314));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCatProdActionPerformed
         // BOTÃO PESQUISAR
        
        if ( txtCampoPesquisaCatProd.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome para busca!");
            txtCampoPesquisaCatProd.requestFocusInWindow();
            
        } else if ( !txtCampoPesquisaCatProd.getText().isEmpty() ) {
           
        // ABILITANDO/DESABILITANDO OS BOTÕES ANTES DE PESQUISAR
        btnNovoCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(!true);
        btnExcluirCatProd.setEnabled(!true);
        btnCancelarCatProd.setEnabled(!true);
        
        
        ModelCategoriaProdutos modelCategoriaProdutos = controlCatProd.buscarCategoriaProdutos(mcatprod);
        
        /*
        txtCodEventos.setText(String.valueOf(modelCategoriaEventos.getCod_cateven()));
        txtNomedaCategoriaEvento.setText(modelCategoriaEventos.getNome_cateven());
        */
        
        mcatprod.setPesquisa(txtCampoPesquisaCatProd.getText());
        
        
        preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS WHERE NOME_CATPROD LIKE '%" + mcatprod.getPesquisa() + "%'");
        
        
        txtCampoPesquisaCatProd.setText("");
        
        
        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS PESQUISAR
        btnNovoCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(!true);
        btnSalvarCatProd.setEnabled(false);
        btnExcluirCatProd.setEnabled(!true);
        btnCancelarCatProd.setEnabled(!false);
        btnPesquisarCatProd.setEnabled(true);
        
        // DESABILITANDO OS CAMPOS APÓS PESQUISAR
        txtCodCatProd.setEnabled(false);
        txtNomedaCategoriaProd.setEnabled(false);

        
        // LIMPANDO OS CAMOPS APÓS PESQUISAR
        txtCodCatProd.setText("");
        txtNomedaCategoriaProd.setText("");
  
        
        
        } else if ( mcatprod.getPesquisa().equals("")) {
            
            preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        }
        
        
       // preencherTabelaUsuario("select * from  usuarios where nome_usuario like '%" + musuario.getPesquisa() + "%'");
       
    }//GEN-LAST:event_btnPesquisarCatProdActionPerformed

    private void btnAlterarCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarCatProdActionPerformed
        // BOTÃO ALTERAR

        flag = 2;

        // ABILITANDO/DESABILITANDO OS CAMPOS
        txtNomedaCategoriaProd.setEnabled(true);
        txtCampoPesquisaCatProd.setEnabled(false);

        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CLICAR NO BOTÃO
        btnNovoCatProd.setEnabled(false);
        btnSalvarCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(false);
        btnExcluirCatProd.setEnabled(false);
        btnCancelarCatProd.setEnabled(true);
        btnPesquisarCatProd.setEnabled(false);

        preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        
        
    }//GEN-LAST:event_btnAlterarCatProdActionPerformed

    private void btnSairCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairCatProdActionPerformed
        // BOTÃO SAIR
        
        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CANCELAR
        btnNovoCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(!true);
        btnSalvarCatProd.setEnabled(false);
        btnExcluirCatProd.setEnabled(!true);
        btnCancelarCatProd.setEnabled(false);
        btnPesquisarCatProd.setEnabled(true);

        // DESABILITANDO OS CAMPOS APÓS CANCELAR
        txtCodCatProd.setText("");
        txtNomedaCategoriaProd.setEnabled(false);
        txtCampoPesquisaCatProd.setEnabled(true);

        // LIMPANDO OS CAMPOS APÓS CLICAR EM "NÃO" EXLCUIR
        txtCodCatProd.setText("");
        txtNomedaCategoriaProd.setText("");
        txtCampoPesquisaCatProd.setText("");

        
        dispose();
        
        preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        
        
        //conectaCategoriaEventos.desconecta();
        
        
    }//GEN-LAST:event_btnSairCatProdActionPerformed

    private void btnNovoCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCatProdActionPerformed
        // BOTÃO NOVO

        flag = 1;

        // LIMPANDO OS CAMPOS APÓS CLICAR
        txtCodCatProd.setText("");
        txtNomedaCategoriaProd.setText("");
        txtCampoPesquisaCatProd.setText("");

        // ABILITANDO OS CAMPOS
        txtNomedaCategoriaProd.setEnabled(true);
        txtCampoPesquisaCatProd.setEnabled(false);

        // COLOCANDO FOCO NOS CAMPOS
        txtNomedaCategoriaProd.requestFocusInWindow();

        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CLICAR NO BOTÃO
        btnNovoCatProd.setEnabled(false);
        btnAlterarCatProd.setEnabled(false);
        btnSalvarCatProd.setEnabled(true);
        btnExcluirCatProd.setEnabled(false);
        btnCancelarCatProd.setEnabled(true);
        btnPesquisarCatProd.setEnabled(false);

        
        preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        
        
    }//GEN-LAST:event_btnNovoCatProdActionPerformed

    private void btnExcluirCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCatProdActionPerformed
         // BOTÃO EXCLUIR
        
        int resposta;
        
        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir!");
        
        if ( resposta == JOptionPane.YES_OPTION ) {
           
            mcatprod.setCod_catprod(Integer.parseInt(txtCodCatProd.getText()));
         
            controlCatProd.excluir(mcatprod);
            
            // ABILITANDO/DESABILITANDO OS BOTÕES APÓS EXLUIR
            btnNovoCatProd.setEnabled(true);
            btnAlterarCatProd.setEnabled(!true);
            btnSalvarCatProd.setEnabled(false);
            btnExcluirCatProd.setEnabled(!true);
            btnCancelarCatProd.setEnabled(false);
            btnPesquisarCatProd.setEnabled(true);
            
            // LIMPANDO OS CAMPOS APÓS EXLCUIR
            txtCodCatProd.setText("");
            txtNomedaCategoriaProd.setText("");
            txtCampoPesquisaCatProd.setText("");

            // ABILITANDO/DESABILITANDO OS CAMPOS APÓS EXCLUIR
            txtNomedaCategoriaProd.setEnabled(false);
            txtCampoPesquisaCatProd.setEnabled(true);
            
            
            preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
            
      
        } else {
        
            // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CLICAR EM "NÃO" EXLUIR
            btnNovoCatProd.setEnabled(true);
            btnAlterarCatProd.setEnabled(!true);
            btnSalvarCatProd.setEnabled(false);
            btnExcluirCatProd.setEnabled(!true);
            btnCancelarCatProd.setEnabled(false);
            btnPesquisarCatProd.setEnabled(true);

            // DESABILITANDO OS CAMPOS APÓS CLICAR EM "NÃO" EXCLUIR
            txtNomedaCategoriaProd.setEnabled(false);
            txtCampoPesquisaCatProd.setEnabled(true);

            // LIMPANDO OS CAMPOS APÓS CLICAR EM "NÃO" EXLCUIR
            txtCodCatProd.setText("");
            txtNomedaCategoriaProd.setText("");
            txtCampoPesquisaCatProd.setText("");
            
            
            preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        
        }
            
        
         //preencherTabelaUsuario("select * from  usuarios where nome_usuario like '%" + musuario.getPesquisa() + "%'");
         
         
    }//GEN-LAST:event_btnExcluirCatProdActionPerformed

    private void btnSalvarCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCatProdActionPerformed
        // BOTÃO SALVAR

        // VALIDANDO OS CAMPOS ANTES DE SALVAR
        if (txtNomedaCategoriaProd.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da categoria!");
            txtNomedaCategoriaProd.requestFocusInWindow();

        } else {

            if (flag == 1) {

                // SALVANDO OS DADOS NA BASE DE DADOS
                mcatprod.setNome_catprod(txtNomedaCategoriaProd.getText());
                

                controlCatProd.salvar(mcatprod);
                

                // ABILITANDO/DESABILITANDO OS BOTÕES APÓS SALVAR
                btnNovoCatProd.setEnabled(true);
                btnAlterarCatProd.setEnabled(!true);
                btnSalvarCatProd.setEnabled(false);
                btnExcluirCatProd.setEnabled(!true);
                btnCancelarCatProd.setEnabled(false);
                btnPesquisarCatProd.setEnabled(true);

                // DESABILITANDO OS CAMPOS APÓS SALVAR
                txtNomedaCategoriaProd.setEnabled(false);
                txtCampoPesquisaCatProd.setEnabled(true);

                // LIMPANDO OS CAMPOS APÓS SALVAR
                txtCodCatProd.setText("");
                txtNomedaCategoriaProd.setText("");
                txtCampoPesquisaCatProd.setText("");

                preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");

            } else {

                if (flag == 2) {

                    // DESABILITANDO O CAMPO PESQUISA
                    txtCampoPesquisaCatProd.setEnabled(false);
                    btnPesquisarCatProd.setEnabled(false);

                    mcatprod.setCod_catprod(Integer.parseInt(txtCodCatProd.getText()));
                    mcatprod.setNome_catprod(txtNomedaCategoriaProd.getText());
                

                    controlCatProd.editar(mcatprod);

                    // ABILITANDO/DESABILITANDO OS BOTÕES APÓS EDITAR
                    btnNovoCatProd.setEnabled(true);
                    btnAlterarCatProd.setEnabled(!true);
                    btnSalvarCatProd.setEnabled(false);
                    btnExcluirCatProd.setEnabled(!true);
                    btnCancelarCatProd.setEnabled(false);
                    btnPesquisarCatProd.setEnabled(true);

                    // ABILITANDO/DESABILITANDO OS CAMPOS APÓS EDITAR
                    txtNomedaCategoriaProd.setEnabled(false);
                    txtCampoPesquisaCatProd.setEnabled(true);

                    // LIMPANDO OS CAMPOS APÓS EDITAR
                    txtCodCatProd.setText("");
                    txtNomedaCategoriaProd.setText("");
                    txtCampoPesquisaCatProd.setText("");

                    preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
                }

            }

        }


         //preencherTabelaUsuario("select * from  usuarios where nome_usuario like '%" + musuario.getPesquisa() + "%'");
         
         
    }//GEN-LAST:event_btnSalvarCatProdActionPerformed

    private void btnCancelarCatProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCatProdActionPerformed
        // BOTÃO CANCELAR         

        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CANCELAR
        btnNovoCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(!true);
        btnSalvarCatProd.setEnabled(false);
        btnExcluirCatProd.setEnabled(!true);
        btnCancelarCatProd.setEnabled(false);
        btnPesquisarCatProd.setEnabled(true);

        // DESABILITANDO OS CAMPOS APÓS CANCELAR
        txtCodCatProd.setText("");
        txtNomedaCategoriaProd.setEnabled(false);
        txtCampoPesquisaCatProd.setEnabled(true);

        // LIMPANDO OS CAMPOS APÓS CLICAR EM "NÃO" EXLCUIR
        txtCodCatProd.setText("");
        txtNomedaCategoriaProd.setText("");
        txtCampoPesquisaCatProd.setText("");

        
        preencherTabelaCategoriaProdutos("SELECT * FROM CATEGORIA_PRODUTOS ORDER BY COD_CATPROD");
        
        
    }//GEN-LAST:event_btnCancelarCatProdActionPerformed

    private void jTableCategoriaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCategoriaProdutosMouseClicked
        // EVENTO NA TABELA QUE AO CLICAR SELECIONA O ITEM
        
        String nome_catprod = "" + jTableCategoriaProdutos.getValueAt(jTableCategoriaProdutos.getSelectedRow(), 1);

        // JOptionPane.showMessageDialog(rootPane, nome_cateven);
        
        // ABILITANDO/DESABILITANDO OS CAMPOS ANTES DE PESQUISAR
        btnNovoCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(!true);
        btnExcluirCatProd.setEnabled(!true);
        btnCancelarCatProd.setEnabled(true);

        mcatprod.setPesquisa(txtCampoPesquisaCatProd.getText());

        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS SELECIONAR ITEM NA TABELA
        btnNovoCatProd.setEnabled(true);
        btnAlterarCatProd.setEnabled(true);
        btnSalvarCatProd.setEnabled(false);
        btnExcluirCatProd.setEnabled(true);
        btnCancelarCatProd.setEnabled(!false);
        btnPesquisarCatProd.setEnabled(true);

        // DESABILITANDO OS CAMPOS APÓS SELECIONAR ITEM NA TABELA
        txtNomedaCategoriaProd.setEnabled(false);
        txtCampoPesquisaCatProd.setEnabled(true);

        conectaCategoriaProdutos.conexao();

        conectaCategoriaProdutos.executaSQL("SELECT * FROM CATEGORIA_PRODUTOS WHERE NOME_CATPROD = '" + nome_catprod + "'");

        try {

            conectaCategoriaProdutos.rs.first();

            txtCodCatProd.setText(String.valueOf(conectaCategoriaProdutos.rs.getInt("COD_CATPROD")));
            txtNomedaCategoriaProd.setText(conectaCategoriaProdutos.rs.getString("NOME_CATPROD"));

            conectaCategoriaProdutos.desconecta();

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao seleciona os dados! \n ERRO: " + ex);
            conectaCategoriaProdutos.desconecta();
        }

        //conectaCategoriaEventos.desconecta();
        
       
    }//GEN-LAST:event_jTableCategoriaProdutosMouseClicked

    
    
    public void preencherTabelaCategoriaProdutos(String SQL) {
        
        ArrayList dados = new ArrayList();
        
        String[] Colunas = new String[] {"Código da categoria","Categoria do Produto" };
        
        conectaCategoriaProdutos.conexao();
        
        conectaCategoriaProdutos.executaSQL(SQL);
        
        try {
            
            conectaCategoriaProdutos.rs.first();
            
            do {
                
                dados.add(new Object[]{conectaCategoriaProdutos.rs.getInt("COD_CATPROD"), 
                    conectaCategoriaProdutos.rs.getString("NOME_CATPROD") });
            
               }while(conectaCategoriaProdutos.rs.next());
            
        } catch (SQLException e) {

            // JOptionPane.showMessageDialog(rootPane, "Erro ao preencher a lista de categoria dos produtos!");
            // JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList! \n ERRO" + e);

        }
        
        ModelTabela mtabelacategoriaprodutos = new ModelTabela(dados, Colunas);
        
        jTableCategoriaProdutos.setModel(mtabelacategoriaprodutos);
        jTableCategoriaProdutos.getColumnModel().getColumn(0).setPreferredWidth(132);
        jTableCategoriaProdutos.getColumnModel().getColumn(0).setResizable(false);
        jTableCategoriaProdutos.getColumnModel().getColumn(1).setPreferredWidth(140);
        jTableCategoriaProdutos.getColumnModel().getColumn(1).setResizable(false);
        jTableCategoriaProdutos.getTableHeader().setReorderingAllowed(false);
        jTableCategoriaProdutos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTableCategoriaProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        // conectaCategoriaProdutos.desconecta();
        
      
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCategoriaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCategoriaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCategoriaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCategoriaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmCategoriaProdutos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aaa;
    private javax.swing.JButton btnAlterarCatProd;
    private javax.swing.JButton btnCancelarCatProd;
    private javax.swing.JButton btnExcluirCatProd;
    private javax.swing.JButton btnNovoCatProd;
    private javax.swing.JButton btnPesquisarCatProd;
    private javax.swing.JButton btnSairCatProd;
    private javax.swing.JButton btnSalvarCatProd;
    private javax.swing.JLabel dddd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableCategoriaProdutos;
    private javax.swing.JTextField txtCampoPesquisaCatProd;
    private javax.swing.JTextField txtCodCatProd;
    private javax.swing.JTextField txtNomedaCategoriaProd;
    // End of variables declaration//GEN-END:variables
}
