package view;

import controller.ConexaoDB;
import controller.ControllerEventos;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.text.*;
import model.ModelEventos;
import model.ModelTabela;

/**
 *
 * @author Luis Carlos O.
 */
public class FrmEventos extends javax.swing.JFrame {
    
    ConexaoDB conectaEvento = new ConexaoDB();
    ConexaoDB conectaCategoriaEventos = new ConexaoDB();
    ControllerEventos controlEventos = new ControllerEventos();
    ModelEventos meventos = new ModelEventos();
    FrmCategoriaEventos frmCatEven;
    int flag = 0;

    
    
    public FrmEventos() {
        initComponents();

        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/ss.jpg")).getImage());
        
        
        // CRIAR MASCARA PARA O CAMPO CEP
        try {

            // ELEMENTO QUE CRIA O FORMATO DA MASCARA
            MaskFormatter formCEP = new MaskFormatter("#####-###");

            // ATRIBUI A MASCARA AO CAMPO CEP
            jFormattedtxtCepEvento.setFormatterFactory(new DefaultFormatterFactory(formCEP));

        } catch (ParseException ex) {

            JOptionPane.showMessageDialog(rootPane, "Erro na máscara do campo CEP \n ERROR: " + ex);

        }

        // CRIAR MASCARA PARA O CAMPO HORA INICIO
        try {

            // ELEMENTO QUE CRIA O FORMATO DA MASCARA
            MaskFormatter formHoraInicio = new MaskFormatter("##:##");

            // ATRIBUI A MASCARA AO CAMPO HORA INICIO
            jFormattedtxtHoraInicioEvento.setFormatterFactory(new DefaultFormatterFactory(formHoraInicio));

        } catch (ParseException ex) {

            JOptionPane.showMessageDialog(rootPane, "Erro na máscara do campo Hora Inicio \n ERROR: " + ex);

        }

        // CRIAR MASCARA PARA O CAMPO HORA FIM
        try {

            // ELEMENTO QUE CRIA O FORMATO DA MASCARA
            MaskFormatter formHoraFim = new MaskFormatter("##:##");

            // ATRIBUI A MASCARA AO CAMPO HORA FIM
            jFormattedtxtHoraTerminoEvento.setFormatterFactory(new DefaultFormatterFactory(formHoraFim));

        } catch (ParseException ex) {

            JOptionPane.showMessageDialog(rootPane, "Erro na máscara do campo Hora Fim \n ERROR: " + ex);

        }
        

        preencherComboCategoriaEvento();
        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
        
        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        btnAlterarEvento = new javax.swing.JButton();
        btnNovoEvento = new javax.swing.JButton();
        btnSalvarEvento = new javax.swing.JButton();
        btnExcluirEvento = new javax.swing.JButton();
        btnCancelarEvento = new javax.swing.JButton();
        btnSairEvento = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNomeDoEvento = new javax.swing.JTextField();
        txtRuaEvento = new javax.swing.JTextField();
        txtComplementoEvento = new javax.swing.JTextField();
        txtNumeroEvento = new javax.swing.JTextField();
        txtBairroEvento = new javax.swing.JTextField();
        txtCidadeEvento = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEvento = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxEstadoEvento = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxCategoriaEvento = new javax.swing.JComboBox<>();
        jDateInicioEvento = new com.toedter.calendar.JDateChooser();
        jDateTerminoEvento = new com.toedter.calendar.JDateChooser();
        txtCampoPesquisaEvento = new javax.swing.JTextField();
        btnPesquisarEvento = new javax.swing.JButton();
        as = new javax.swing.JLabel();
        txtCodEvento = new javax.swing.JTextField();
        jFormattedtxtCepEvento = new javax.swing.JFormattedTextField();
        jFormattedtxtHoraInicioEvento = new javax.swing.JFormattedTextField();
        jFormattedtxtHoraTerminoEvento = new javax.swing.JFormattedTextField();
        btnAdicionarCatEven = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eventos");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true), "Opções", javax.swing.border.TitledBorder.TRAILING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        btnAlterarEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAlterarEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-suporte-50.png"))); // NOI18N
        btnAlterarEvento.setToolTipText("Alterar");
        btnAlterarEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarEvento.setEnabled(false);
        btnAlterarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarEventoActionPerformed(evt);
            }
        });

        btnNovoEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNovoEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-adicionar-50.png"))); // NOI18N
        btnNovoEvento.setToolTipText("Adicionar");
        btnNovoEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNovoEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoEventoActionPerformed(evt);
            }
        });

        btnSalvarEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSalvarEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-salvar-50.png"))); // NOI18N
        btnSalvarEvento.setToolTipText("Salvar");
        btnSalvarEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvarEvento.setEnabled(false);
        btnSalvarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarEventoActionPerformed(evt);
            }
        });

        btnExcluirEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcluirEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-lixo-50.png"))); // NOI18N
        btnExcluirEvento.setToolTipText("Excluir");
        btnExcluirEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluirEvento.setEnabled(false);
        btnExcluirEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirEventoActionPerformed(evt);
            }
        });

        btnCancelarEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelarEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-cancelar-50.png"))); // NOI18N
        btnCancelarEvento.setToolTipText("Cancelar");
        btnCancelarEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarEvento.setEnabled(false);
        btnCancelarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEventoActionPerformed(evt);
            }
        });

        btnSairEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSairEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-sair-50.png"))); // NOI18N
        btnSairEvento.setToolTipText("Sair");
        btnSairEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSairEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairEventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelarEvento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(btnExcluirEvento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnNovoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnAlterarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSalvarEvento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSairEvento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAlterarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluirEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSairEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel1.setText("Nome do Evento*:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setText("Rua*:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel3.setText("Numero*:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setText("CEP:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setText("Complemento:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setText("Bairro*:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setText("Cidade*:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel8.setText("Estado*:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel9.setText("Data Inicio Evento*:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel10.setText("Data Termino Evento*:");

        txtNomeDoEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNomeDoEvento.setEnabled(false);
        txtNomeDoEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeDoEventoActionPerformed(evt);
            }
        });

        txtRuaEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtRuaEvento.setEnabled(false);
        txtRuaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRuaEventoActionPerformed(evt);
            }
        });

        txtComplementoEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtComplementoEvento.setEnabled(false);
        txtComplementoEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplementoEventoActionPerformed(evt);
            }
        });

        txtNumeroEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNumeroEvento.setEnabled(false);
        txtNumeroEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroEventoActionPerformed(evt);
            }
        });

        txtBairroEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBairroEvento.setEnabled(false);
        txtBairroEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroEventoActionPerformed(evt);
            }
        });

        txtCidadeEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCidadeEvento.setEnabled(false);
        txtCidadeEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeEventoActionPerformed(evt);
            }
        });

        jTableEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableEvento.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTableEvento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEventoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableEvento);

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setText("Hora de Inicio Evento*:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel12.setText("Hora de Termino Evento:");

        jComboBoxEstadoEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxEstadoEvento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        jComboBoxEstadoEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxEstadoEvento.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel13.setText("Categoria do Evento*:");

        jComboBoxCategoriaEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxCategoriaEvento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Item 2", "Item 3", "Item 4" }));
        jComboBoxCategoriaEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxCategoriaEvento.setEnabled(false);

        jDateInicioEvento.setEnabled(false);
        jDateInicioEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jDateTerminoEvento.setEnabled(false);
        jDateTerminoEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtCampoPesquisaEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCampoPesquisaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCampoPesquisaEventoActionPerformed(evt);
            }
        });

        btnPesquisarEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPesquisarEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-pesquisar-25.png"))); // NOI18N
        btnPesquisarEvento.setToolTipText("Pesquisar");
        btnPesquisarEvento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPesquisarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarEventoActionPerformed(evt);
            }
        });

        as.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        as.setText("Cod:");

        txtCodEvento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCodEvento.setEnabled(false);

        jFormattedtxtCepEvento.setEnabled(false);
        jFormattedtxtCepEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedtxtHoraInicioEvento.setEnabled(false);
        jFormattedtxtHoraInicioEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedtxtHoraTerminoEvento.setEnabled(false);
        jFormattedtxtHoraTerminoEvento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnAdicionarCatEven.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnAdicionarCatEven.setForeground(new java.awt.Color(153, 0, 153));
        btnAdicionarCatEven.setText("+");
        btnAdicionarCatEven.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarCatEven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarCatEvenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedtxtCepEvento, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                    .addComponent(txtComplementoEvento))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBairroEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCidadeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtRuaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumeroEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNomeDoEvento)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(as, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(txtCampoPesquisaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisarEvento)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEstadoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCategoriaEvento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionarCatEven, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateInicioEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateTerminoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedtxtHoraInicioEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jFormattedtxtHoraTerminoEvento)
                                        .addGap(2, 2, 2)))))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeDoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRuaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBairroEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedtxtCepEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtComplementoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCidadeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxEstadoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCategoriaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarCatEven))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jFormattedtxtHoraInicioEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(jFormattedtxtHoraTerminoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jDateInicioEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(jDateTerminoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnPesquisarEvento))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(as, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCodEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCampoPesquisaEvento))))
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        setBounds(730, 280, 672, 430);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlterarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarEventoActionPerformed
        // BOTÃO ALTERAR
        
        flag = 2;

        // ABILITANDO/DESABILITANDO OS CAMPOS
        txtNomeDoEvento.setEnabled(true);
        txtRuaEvento.setEnabled(true);
        txtNumeroEvento.setEnabled(true);
        jFormattedtxtCepEvento.setEnabled(true);
        txtBairroEvento.setEnabled(true);
        txtComplementoEvento.setEnabled(true);
        txtCidadeEvento.setEnabled(true);
        jComboBoxEstadoEvento.setEnabled(true);
        jComboBoxCategoriaEvento.setEnabled(!true);
        jDateInicioEvento.setEnabled(true);
        jFormattedtxtHoraInicioEvento.setEnabled(true);
        jDateTerminoEvento.setEnabled(true);
        jFormattedtxtHoraTerminoEvento.setEnabled(true);
        txtCodEvento.setEnabled(false);
        txtCampoPesquisaEvento.setEnabled(false);

        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CLICAR NO BOTÃO
        btnNovoEvento.setEnabled(false);
        btnAlterarEvento.setEnabled(false);
        btnSalvarEvento.setEnabled(true);
        btnExcluirEvento.setEnabled(false);
        btnCancelarEvento.setEnabled(true);
        btnPesquisarEvento.setEnabled(false);
        btnAdicionarCatEven.setEnabled(false);
        
        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
        
        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        
        preencherComboCategoriaEvento();
        
    }//GEN-LAST:event_btnAlterarEventoActionPerformed

    private void btnNovoEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoEventoActionPerformed
        // BOTÃO NOVO
        
        flag = 1;
        
        // LIMPANDO OS CAMPOS APÓS CLICAR
        txtNomeDoEvento.setText("");
        txtRuaEvento.setText("");
        txtNumeroEvento.setText("");
        jFormattedtxtCepEvento.setText("");
        txtBairroEvento.setText("");
        txtComplementoEvento.setText("");
        txtCidadeEvento.setText("");
        jComboBoxEstadoEvento.setSelectedItem("Selecionar");
        // jComboBoxCategoriaEvento.setSelectedItem();
        jDateInicioEvento.setDate(null);
        jFormattedtxtHoraInicioEvento.setText("");
        jDateTerminoEvento.setDate(null);
        jFormattedtxtHoraTerminoEvento.setText("");
        txtCampoPesquisaEvento.setText("");
        txtCodEvento.setText("");
        
        // COLOCANDO FOCO NO CAMPO
        txtNomeDoEvento.requestFocusInWindow();
        
        // ABILITANDO OS CAMPOS 
        txtNomeDoEvento.setEnabled(true);
        txtRuaEvento.setEnabled(true);
        txtNumeroEvento.setEnabled(true);
        jFormattedtxtCepEvento.setEnabled(true);
        txtBairroEvento.setEnabled(true);
        txtComplementoEvento.setEnabled(true);
        txtCidadeEvento.setEnabled(true);
        jComboBoxEstadoEvento.setEnabled(true);
        jComboBoxCategoriaEvento.setEnabled(true);
        jDateInicioEvento.setEnabled(true);
        jFormattedtxtHoraInicioEvento.setEnabled(true);
        jDateTerminoEvento.setEnabled(true);
        jFormattedtxtHoraTerminoEvento.setEnabled(true);
        txtCampoPesquisaEvento.setEnabled(false);
        txtCodEvento.setEnabled(false);
        
        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CLICAR NO BOTÃO
        btnNovoEvento.setEnabled(false);
        btnAlterarEvento.setEnabled(false);
        btnSalvarEvento.setEnabled(true);
        btnExcluirEvento.setEnabled(false);
        btnCancelarEvento.setEnabled(true);
        btnPesquisarEvento.setEnabled(false);
        btnAdicionarCatEven.setEnabled(false);
        
        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
        
        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        
        preencherComboCategoriaEvento();
            
    }//GEN-LAST:event_btnNovoEventoActionPerformed

    private void btnSalvarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarEventoActionPerformed
        // BOTÃO SALVAR
        
        // VALIDANDO OS CAMPOS ANTES DE SALVAR
        if ( txtNomeDoEvento.getText().isEmpty() 
                || txtNomeDoEvento.getText().length() < 5 ) {
            
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do evento!");
            txtNomeDoEvento.requestFocusInWindow();
            return;
        }
        
        if ( txtRuaEvento.getText().isEmpty() 
                || txtRuaEvento.getText().length() < 3 ) {
            
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da rua!");
            txtRuaEvento.requestFocusInWindow();
            return;
        }
        
        if ( txtNumeroEvento.getText().isEmpty() 
                || txtNumeroEvento.getText().equals("0") 
                || txtNumeroEvento.getText().equals("00") 
                || txtNumeroEvento.getText().equals("000")
                || txtNumeroEvento.getText().equals("0000")
                || txtNumeroEvento.getText().length() > 6 ) {
            
            JOptionPane.showMessageDialog(rootPane, "Informe o número da casa!");
            txtNumeroEvento.requestFocusInWindow();
            return;            
        }
        
        if ( txtBairroEvento.getText().isEmpty() 
                || txtBairroEvento.getText().length() < 4 ) {
            
            JOptionPane.showMessageDialog(rootPane, "Informe o nome do bairro!");
            txtBairroEvento.requestFocusInWindow();
            return;
        }
        
        if ( txtCidadeEvento.getText().isEmpty() 
                || txtCidadeEvento.getText().length() < 4 ) {
            
            JOptionPane.showMessageDialog(rootPane, "Informe o nome da cidade!");
            txtCidadeEvento.requestFocusInWindow();
            return;
        }
        
        if ( jComboBoxEstadoEvento.getSelectedIndex() == 0 ) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o estado!");
            jComboBoxEstadoEvento.requestFocusInWindow();
            return;
        } 
        
        if ( jComboBoxCategoriaEvento.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione a categoria do evento!");
            jComboBoxCategoriaEvento.requestFocusInWindow();
            return;
        }
        
        if ( jFormattedtxtHoraInicioEvento.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(rootPane, "Informe a hora de inicio do evento!");
            jFormattedtxtHoraInicioEvento.requestFocusInWindow();
            return;
        }

        if ( jDateInicioEvento.getCalendar().after(jDateTerminoEvento.getCalendar())
                || jDateInicioEvento.getCalendar() == null
                || jDateTerminoEvento.getCalendar() == null 
                || (jDateInicioEvento.getCalendar() == null && jDateTerminoEvento.getCalendar() == null ) ) {
        
            JOptionPane.showMessageDialog(rootPane, "Informe uma data válida para inicio e fim do evento!");
            //jDateInicioEvento.requestFocusInWindow();
            
        } else {

            if ( flag == 1 ) {

                // SALVANDO OS DADOS NA BASE DE DADOS
                meventos.setNome_evento(txtNomeDoEvento.getText());
                meventos.setNome_rua_evento(txtRuaEvento.getText());
                meventos.setNumero_evento(txtNumeroEvento.getText());
                meventos.setCep_evento(jFormattedtxtCepEvento.getText());
                meventos.setBairro_evento(txtBairroEvento.getText());
                meventos.setComplemento_evento(txtComplementoEvento.getText());
                meventos.setCidade_evento(txtCidadeEvento.getText());
                meventos.setEstado_evento(jComboBoxEstadoEvento.getSelectedItem().toString());
                
        
                
                try {
                    
                    conectaEvento.conexao();
                    
                    conectaEvento.executaSQL("SELECT * FROM CATEGORIA_EVENTOS WHERE NOME_CATEVEN = '" + jComboBoxCategoriaEvento.getSelectedItem() + "'" );
                    
                    conectaEvento.rs.first();
                    
                    // JOptionPane.showMessageDialog(rootPane, conectaEvento.rs.getInt("COD_CATEVEN"));
                    
                    meventos.setCod_categoria_evento(conectaEvento.rs.getInt("COD_CATEVEN"));
                    
                    conectaEvento.desconecta();
                    
                } catch (SQLException ex) {
                    
                    JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar a categoria do evento \n ERROR: " + ex);
                    
                    conectaEvento.desconecta();
                    
                }
                
                
                meventos.setData_inicio_evento(jDateInicioEvento.getCalendar());
                meventos.setHora_inicio_evento(jFormattedtxtHoraInicioEvento.getText());
                meventos.setData_termino_evento(jDateTerminoEvento.getCalendar());
                meventos.setHora_termino_evento(jFormattedtxtHoraTerminoEvento.getText());

                controlEventos.salvar(meventos);
                

                // ABILITANDO/DESABILITANDO OS BOTÕES APÓS SALVAR
                btnNovoEvento.setEnabled(true);
                btnAlterarEvento.setEnabled(!true);
                btnSalvarEvento.setEnabled(false);
                btnExcluirEvento.setEnabled(!true);
                btnCancelarEvento.setEnabled(false);
                btnPesquisarEvento.setEnabled(true);
                btnAdicionarCatEven.setEnabled(true);

                // DESABILITANDO OS CAMPOS APÓS SALVAR
                txtNomeDoEvento.setEnabled(false);
                txtRuaEvento.setEnabled(false);
                txtNumeroEvento.setEnabled(false);
                jFormattedtxtCepEvento.setEnabled(false);
                txtBairroEvento.setEnabled(false);
                txtComplementoEvento.setEnabled(!true);
                txtCidadeEvento.setEnabled(false);
                jComboBoxEstadoEvento.setEnabled(false);
                jComboBoxCategoriaEvento.setEnabled(false);
                jDateInicioEvento.setEnabled(false);
                jFormattedtxtHoraInicioEvento.setEnabled(false);
                jDateTerminoEvento.setEnabled(false);
                jFormattedtxtHoraTerminoEvento.setEnabled(false);
                txtCodEvento.setEnabled(false);
                
                // ABILITANDO CAMPO DE PESQUISA
                txtCampoPesquisaEvento.setEnabled(true);

                // LIMPANDO OS CAMPOS APÓS SALVAR
                txtNomeDoEvento.setText("");
                txtRuaEvento.setText("");
                txtNumeroEvento.setText("");
                jFormattedtxtCepEvento.setText("");
                txtBairroEvento.setText("");
                txtComplementoEvento.setText("");
                txtCidadeEvento.setText("");
                jComboBoxEstadoEvento.setSelectedItem("Selecionar");
                // jComboBoxCategoriaEvento.setSelectedItem();
                jDateInicioEvento.setDate(null);
                jFormattedtxtHoraInicioEvento.setText("");
                jDateTerminoEvento.setDate(null);
                jFormattedtxtHoraTerminoEvento.setText("");
                txtCampoPesquisaEvento.setText("");
                txtCodEvento.setText("");
                

                // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
                
                preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
                
            } else {

                if ( flag == 2 ) {

                    // DESABILITANDO O CAMPO PESQUISA
                    txtCampoPesquisaEvento.setEnabled(false);
                    btnPesquisarEvento.setEnabled(false);

                    // SETANDO OS DADOS PARA EDITAR NA BASE DE DADOS
                    
                    meventos.setCod_evento(Integer.parseInt(txtCodEvento.getText()));
                    
                    meventos.setNome_evento(txtNomeDoEvento.getText());
                    meventos.setNome_rua_evento(txtRuaEvento.getText());
                    meventos.setNumero_evento(txtNumeroEvento.getText());
                    meventos.setCep_evento(jFormattedtxtCepEvento.getText());
                    meventos.setBairro_evento(txtBairroEvento.getText());
                    meventos.setComplemento_evento(txtComplementoEvento.getText());
                    meventos.setCidade_evento(txtCidadeEvento.getText());
                    meventos.setEstado_evento(jComboBoxEstadoEvento.getSelectedItem().toString());
                    
                    
                    try {

                        conectaEvento.conexao();

                        conectaEvento.executaSQL("SELECT * FROM CATEGORIA_EVENTOS WHERE NOME_CATEVEN = '" + jComboBoxCategoriaEvento.getSelectedItem() + "'");

                        conectaEvento.rs.first();
                        
                        meventos.setCod_categoria_evento(conectaEvento.rs.getInt("COD_CATEVEN"));
                        
                        conectaEvento.desconecta();

                    } catch (SQLException ex) {

                        Logger.getLogger(FrmEventos.class.getName()).log(Level.SEVERE, null, ex);
                        
                        conectaEvento.desconecta();

                    }
                    
                    
                    meventos.setData_inicio_evento(jDateInicioEvento.getCalendar());
                    meventos.setHora_inicio_evento(jFormattedtxtHoraInicioEvento.getText());
                    meventos.setData_termino_evento(jDateTerminoEvento.getCalendar());
                    meventos.setHora_termino_evento(jFormattedtxtHoraTerminoEvento.getText());
                    

                    controlEventos.editar(meventos);
                    

                    // ABILITANDO/DESABILITANDO OS BOTÕES APÓS EDITAR
                    btnNovoEvento.setEnabled(true);
                    btnAlterarEvento.setEnabled(!true);
                    btnSalvarEvento.setEnabled(false);
                    btnExcluirEvento.setEnabled(!true);
                    btnCancelarEvento.setEnabled(false);
                    btnPesquisarEvento.setEnabled(true);
                    btnAdicionarCatEven.setEnabled(true);

                    // ABILITANDO/DESABILITANDO OS CAMPOS APÓS EDITAR
                    txtNomeDoEvento.setEnabled(false);
                    txtRuaEvento.setEnabled(false);
                    txtNumeroEvento.setEnabled(false);
                    jFormattedtxtCepEvento.setEnabled(false);
                    txtBairroEvento.setEnabled(false);
                    txtComplementoEvento.setEnabled(!true);
                    txtCidadeEvento.setEnabled(false);
                    jComboBoxEstadoEvento.setEnabled(false);
                    jComboBoxCategoriaEvento.setEnabled(false);
                    jDateInicioEvento.setEnabled(false);
                    jFormattedtxtHoraInicioEvento.setEnabled(false);
                    jDateTerminoEvento.setEnabled(false);
                    jFormattedtxtHoraTerminoEvento.setEnabled(false);
                    txtCodEvento.setEnabled(false);
                    txtCampoPesquisaEvento.setEnabled(true);

                    // LIMPANDO OS CAMPOS APÓS EDITAR
                    txtNomeDoEvento.setText("");
                    txtRuaEvento.setText("");
                    txtNumeroEvento.setText("");
                    jFormattedtxtCepEvento.setText("");
                    txtBairroEvento.setText("");
                    txtComplementoEvento.setText("");
                    txtCidadeEvento.setText("");
                    jComboBoxEstadoEvento.setSelectedItem("Selecionar");
                    // jComboBoxCategoriaEvento.setSelectedItem();
                    jDateInicioEvento.setDate(null);
                    jFormattedtxtHoraInicioEvento.setText("");
                    jDateTerminoEvento.setDate(null);
                    jFormattedtxtHoraTerminoEvento.setText("");
                    txtCampoPesquisaEvento.setText("");
                    txtCodEvento.setText("");

                    // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
                    
                    preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
                    
                }

            }

        }

        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
        
        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");

    }//GEN-LAST:event_btnSalvarEventoActionPerformed

    private void btnExcluirEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirEventoActionPerformed
        // BOTÃO EXCLUIR
 
        int resposta;

        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir!");

        if (resposta == JOptionPane.YES_OPTION) {

            meventos.setCod_evento(Integer.parseInt(txtCodEvento.getText()));

            controlEventos.excluir(meventos);

            // ABILITANDO/DESABILITANDO OS BOTÕES APÓS EXLUIR
            btnNovoEvento.setEnabled(true);
            btnAlterarEvento.setEnabled(!true);
            btnSalvarEvento.setEnabled(false);
            btnExcluirEvento.setEnabled(!true);
            btnCancelarEvento.setEnabled(false);
            btnPesquisarEvento.setEnabled(true);
            btnAdicionarCatEven.setEnabled(true);

            // LIMPANDO OS CAMPOS APÓS EXLCUIR
            txtNomeDoEvento.setText("");
            txtRuaEvento.setText("");
            txtNumeroEvento.setText("");
            jFormattedtxtCepEvento.setText("");
            txtBairroEvento.setText("");
            txtComplementoEvento.setText("");
            txtCidadeEvento.setText("");
            jComboBoxEstadoEvento.setSelectedItem("Selecionar");
            // jComboBoxCategoriaEvento.setSelectedItem();
            jDateInicioEvento.setDate(null);
            jFormattedtxtHoraInicioEvento.setText("");
            jDateTerminoEvento.setDate(null);
            jFormattedtxtHoraTerminoEvento.setText("");
            txtCampoPesquisaEvento.setText("");
            txtCodEvento.setText("");

            // ABILITANDO/DESABILITANDO OS CAMPOS APÓS EXCLUIR
            txtNomeDoEvento.setEnabled(false);
            txtRuaEvento.setEnabled(false);
            txtNumeroEvento.setEnabled(false);
            jFormattedtxtCepEvento.setEnabled(false);
            txtBairroEvento.setEnabled(false);
            txtComplementoEvento.setEnabled(!true);
            txtCidadeEvento.setEnabled(false);
            jComboBoxEstadoEvento.setEnabled(false);
            jComboBoxCategoriaEvento.setEnabled(false);
            jDateInicioEvento.setEnabled(false);
            jFormattedtxtHoraInicioEvento.setEnabled(false);
            jDateTerminoEvento.setEnabled(false);
            jFormattedtxtHoraTerminoEvento.setEnabled(false);
            txtCodEvento.setEnabled(false);
            txtCampoPesquisaEvento.setEnabled(true);

            // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");

            preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
            
        } else {

            // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CLICAR EM "NÃO" EXLUIR
            btnNovoEvento.setEnabled(true);
            btnAlterarEvento.setEnabled(!true);
            btnSalvarEvento.setEnabled(false);
            btnExcluirEvento.setEnabled(!true);
            btnCancelarEvento.setEnabled(false);
            btnPesquisarEvento.setEnabled(true);
            btnAdicionarCatEven.setEnabled(true);

            // DESABILITANDO OS CAMPOS APÓS CLICAR EM "NÃO" EXCLUIR
            txtNomeDoEvento.setEnabled(false);
            txtRuaEvento.setEnabled(false);
            txtNumeroEvento.setEnabled(false);
            jFormattedtxtCepEvento.setEnabled(false);
            txtBairroEvento.setEnabled(false);
            txtComplementoEvento.setEnabled(!true);
            txtCidadeEvento.setEnabled(false);
            jComboBoxEstadoEvento.setEnabled(false);
            jComboBoxCategoriaEvento.setEnabled(false);
            jDateInicioEvento.setEnabled(false);
            jFormattedtxtHoraInicioEvento.setEnabled(false);
            jDateTerminoEvento.setEnabled(false);
            jFormattedtxtHoraTerminoEvento.setEnabled(false);
            txtCodEvento.setEnabled(false);
            txtCampoPesquisaEvento.setEnabled(true);

            // LIMPANDO OS CAMPOS APÓS CLICAR EM "NÃO" EXLCUIR
            txtNomeDoEvento.setText("");
            txtRuaEvento.setText("");
            txtNumeroEvento.setText("");
            jFormattedtxtCepEvento.setText("");
            txtBairroEvento.setText("");
            txtComplementoEvento.setText("");
            txtCidadeEvento.setText("");
            jComboBoxEstadoEvento.setSelectedItem("Selecionar");
            // jComboBoxCategoriaEvento.setSelectedItem();
            jDateInicioEvento.setDate(null);
            jFormattedtxtHoraInicioEvento.setText("");
            jDateTerminoEvento.setDate(null);
            jFormattedtxtHoraTerminoEvento.setText("");
            txtCampoPesquisaEvento.setText("");
            txtCodEvento.setText("");

            // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");

            preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
            
        }
        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO, CATEGORIA_EVENTOS.NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");

        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");

    }//GEN-LAST:event_btnExcluirEventoActionPerformed

    private void btnCancelarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEventoActionPerformed
        // BOTÃO CANCELAR
        
        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS CANCELAR
        btnNovoEvento.setEnabled(true);
        btnAlterarEvento.setEnabled(!true);
        btnSalvarEvento.setEnabled(false);
        btnExcluirEvento.setEnabled(!true);
        btnCancelarEvento.setEnabled(false);
        btnPesquisarEvento.setEnabled(true);
        btnAdicionarCatEven.setEnabled(true);
        
        // DESABILITANDO OS CAMPOS APÓS CANCELAR
        txtNomeDoEvento.setEnabled(false);
        txtRuaEvento.setEnabled(false);
        txtNumeroEvento.setEnabled(false);
        jFormattedtxtCepEvento.setEnabled(false);
        txtBairroEvento.setEnabled(false);
        txtComplementoEvento.setEnabled(!true);
        txtCidadeEvento.setEnabled(false);
        jComboBoxEstadoEvento.setEnabled(false);
        jComboBoxCategoriaEvento.setEnabled(false);
        jDateInicioEvento.setEnabled(false);
        jFormattedtxtHoraInicioEvento.setEnabled(false);
        jDateTerminoEvento.setEnabled(false);
        jFormattedtxtHoraTerminoEvento.setEnabled(false);
        txtCodEvento.setEnabled(false);
        
        txtCampoPesquisaEvento.setEnabled(true);
        
        // LIMPANDO OS CAMPOS APÓS CLICAR
        txtCodEvento.setText("");
        txtNomeDoEvento.setText("");
        txtRuaEvento.setText("");
        txtNumeroEvento.setText("");
        jFormattedtxtCepEvento.setText("");
        txtBairroEvento.setText("");
        txtComplementoEvento.setText("");
        txtCidadeEvento.setText("");
        jComboBoxEstadoEvento.setSelectedItem("Selecionar");
        // jComboBoxCategoriaEvento.setSelectedItem(0);
        jDateInicioEvento.setDate(null);
        jFormattedtxtHoraInicioEvento.setText("");
        jDateTerminoEvento.setDate(null);
        jFormattedtxtHoraTerminoEvento.setText("");
        
        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
   
        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        
    }//GEN-LAST:event_btnCancelarEventoActionPerformed

    private void btnPesquisarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarEventoActionPerformed
        // BOTÃO PESQUISAR
     
        if (txtCampoPesquisaEvento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome para pesquisar!");
            txtCampoPesquisaEvento.requestFocusInWindow();

        } else if ( !txtCampoPesquisaEvento.getText().isEmpty() ) {
            
            // ABILITANDO/DESABILITANDO OS BOTÕES ANTES DE PESQUISAR
            btnNovoEvento.setEnabled(true);
            btnAlterarEvento.setEnabled(!true);
            btnExcluirEvento.setEnabled(!true);
            btnCancelarEvento.setEnabled(true);

            meventos.setPesquisa(txtCampoPesquisaEvento.getText());

            ModelEventos modelEventos = controlEventos.buscarEventos(meventos);
            
            preencherTabelaEvento("SELECT * FROM EVENTOS WHERE NOME_EVENTO LIKE '%" + meventos.getPesquisa() + "%'");

            txtCampoPesquisaEvento.setText("");

            // ABILITANDO/DESABILITANDO OS BOTÕES APÓS PESQUISAR
            btnNovoEvento.setEnabled(true);
            btnAlterarEvento.setEnabled(!true);
            btnSalvarEvento.setEnabled(false);
            btnExcluirEvento.setEnabled(!true);
            btnCancelarEvento.setEnabled(!false);
            btnPesquisarEvento.setEnabled(true);

            // DESABILITANDO OS CAMPOS APÓS PESQUISAR
            txtNomeDoEvento.setEnabled(false);
            txtRuaEvento.setEnabled(false);
            txtNumeroEvento.setEnabled(false);
            jFormattedtxtCepEvento.setEnabled(false);
            txtBairroEvento.setEnabled(false);
            txtComplementoEvento.setEnabled(!true);
            txtCidadeEvento.setEnabled(false);
            jComboBoxEstadoEvento.setEnabled(false);
            jComboBoxCategoriaEvento.setEnabled(false);
            jDateInicioEvento.setEnabled(false);
            jFormattedtxtHoraInicioEvento.setEnabled(false);
            jDateTerminoEvento.setEnabled(false);
            jFormattedtxtHoraTerminoEvento.setEnabled(false);
            txtCodEvento.setEnabled(false);
            txtCampoPesquisaEvento.setEnabled(true);

            // LIMPANDO OS CAMPOS APÓS PESQUISAR
            txtCodEvento.setText("");
            txtNomeDoEvento.setText("");
            txtRuaEvento.setText("");
            txtNumeroEvento.setText("");
            jFormattedtxtCepEvento.setText("");
            txtBairroEvento.setText("");
            txtComplementoEvento.setText("");
            txtCidadeEvento.setText("");
            // jComboBoxEstadoEvento.setSelectedItem(0);
            // jComboBoxCategoriaEvento.setSelectedItem(0);
            // jDateInicioEvento.setDate(null);
            jFormattedtxtHoraInicioEvento.setText("");
            // jDateTerminoEvento.setDate(null);
            jFormattedtxtHoraTerminoEvento.setText("");
            txtCampoPesquisaEvento.setText("");
            
            
            // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
            
            
        } else if ( meventos.getPesquisa().equals("")) {
            
            // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO, CATEGORIA_EVENTOS.NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
            
            preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        }

       // preencherTabelaEvento("SELECT * FROM EVENTOS WHERE NOME_EVENTO LIKE '%" + meventos.getPesquisa() + "%'");
        
       // preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        


    }//GEN-LAST:event_btnPesquisarEventoActionPerformed

    private void btnSairEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairEventoActionPerformed
        // BOTÃO SAIR
        
        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS SAIR
        btnNovoEvento.setEnabled(true);
        btnAlterarEvento.setEnabled(!true);
        btnSalvarEvento.setEnabled(false);
        btnExcluirEvento.setEnabled(!true);
        btnCancelarEvento.setEnabled(false);
        btnPesquisarEvento.setEnabled(true);
        btnAdicionarCatEven.setEnabled(true);
        
        // DESABILITANDO OS CAMPOS APÓS SAIR
        txtNomeDoEvento.setEnabled(false);
        txtRuaEvento.setEnabled(false);
        txtNumeroEvento.setEnabled(false);
        jFormattedtxtCepEvento.setEnabled(false);
        txtBairroEvento.setEnabled(false);
        txtComplementoEvento.setEnabled(!true);
        txtCidadeEvento.setEnabled(false);
        jComboBoxEstadoEvento.setEnabled(false);
        jComboBoxCategoriaEvento.setEnabled(false);
        jDateInicioEvento.setEnabled(false);
        jFormattedtxtHoraInicioEvento.setEnabled(false);
        jDateTerminoEvento.setEnabled(false);
        jFormattedtxtHoraTerminoEvento.setEnabled(false);
        txtCodEvento.setEnabled(false);
        
        txtCampoPesquisaEvento.setEnabled(true);
        
        // LIMPANDO OS CAMPOS APÓS CLICAR
        txtCodEvento.setText("");
        txtNomeDoEvento.setText("");
        txtRuaEvento.setText("");
        txtNumeroEvento.setText("");
        jFormattedtxtCepEvento.setText("");
        txtBairroEvento.setText("");
        txtComplementoEvento.setText("");
        txtCidadeEvento.setText("");
        jComboBoxEstadoEvento.setSelectedItem("Selecionar");
        // jComboBoxCategoriaEvento.setSelectedItem(0);
        jDateInicioEvento.setDate(null);
        jFormattedtxtHoraInicioEvento.setText("");
        jDateTerminoEvento.setDate(null);
        jFormattedtxtHoraTerminoEvento.setText("");
        
        
        dispose();
        
        // preencherTabelaEvento("SELECT COD_EVENTO,NOME_EVENTO,DATA_INICIO_EVENTO,HORA_INICIO_EVENTO,DATA_FIM_EVENTO,NOME_CATEVEN FROM EVENTOS INNER JOIN CATEGORIA_EVENTOS ON EVENTOS.COD_EVENTO = CATEGORIA_EVENTOS.COD_CATEVEN ORDER BY COD_EVENTO");
        
        preencherTabelaEvento("SELECT * FROM EVENTOS ORDER BY COD_EVENTO");
        
        
    }//GEN-LAST:event_btnSairEventoActionPerformed

    private void txtNomeDoEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeDoEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeDoEventoActionPerformed

    private void txtRuaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRuaEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRuaEventoActionPerformed

    private void txtComplementoEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplementoEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComplementoEventoActionPerformed

    private void txtNumeroEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroEventoActionPerformed

    private void txtBairroEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroEventoActionPerformed

    private void txtCidadeEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeEventoActionPerformed

    private void jTableEventoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEventoMouseClicked
        // EVENTO NA TABELA QUE AO CLICAR SELECIONA O ITEM

        String nome_evento = "" + jTableEvento.getValueAt(jTableEvento.getSelectedRow(), 1);

        // JOptionPane.showMessageDialog(rootPane, nome_evento);
        
        // ABILITANDO/DESABILITANDO OS CAMPOS ANTES DE PESQUISAR
        btnNovoEvento.setEnabled(true);
        btnAlterarEvento.setEnabled(!true);
        btnExcluirEvento.setEnabled(!true);
        btnCancelarEvento.setEnabled(true);

        meventos.setPesquisa(txtCampoPesquisaEvento.getText());

        // ABILITANDO/DESABILITANDO OS BOTÕES APÓS SELECIONAR ITEM NA TABELA
        btnNovoEvento.setEnabled(true);
        btnAlterarEvento.setEnabled(true);
        btnSalvarEvento.setEnabled(false);
        btnExcluirEvento.setEnabled(true);
        btnCancelarEvento.setEnabled(!false);
        btnPesquisarEvento.setEnabled(true);
        btnAdicionarCatEven.setEnabled(true);

        // DESABILITANDO OS CAMPOS APÓS SELECIONAR ITEM NA TABELA
        txtNomeDoEvento.setEnabled(false);
        txtRuaEvento.setEnabled(false);
        txtNumeroEvento.setEnabled(false);
        jFormattedtxtCepEvento.setEnabled(false);
        txtBairroEvento.setEnabled(false);
        txtComplementoEvento.setEnabled(!true);
        txtCidadeEvento.setEnabled(false);
        jComboBoxEstadoEvento.setEnabled(false);
        jComboBoxCategoriaEvento.setEnabled(false);
        jDateInicioEvento.setEnabled(false);
        jFormattedtxtHoraInicioEvento.setEnabled(false);
        jDateTerminoEvento.setEnabled(false);
        jFormattedtxtHoraTerminoEvento.setEnabled(false);
        txtCodEvento.setEnabled(false);
         
        txtCampoPesquisaEvento.setEnabled(true);
        
        
        
        // LIMPANDO OS CAMPOS APÓS CLICAR
        txtCodEvento.setText("");
        txtNomeDoEvento.setText("");
        txtRuaEvento.setText("");
        txtNumeroEvento.setText("");
        jFormattedtxtCepEvento.setText("");
        txtBairroEvento.setText("");
        txtComplementoEvento.setText("");
        txtCidadeEvento.setText("");
        jComboBoxEstadoEvento.setSelectedItem("Selecionar");
        // jComboBoxCategoriaEvento.setSelectedItem(0);
        jDateInicioEvento.setDate(null);
        jFormattedtxtHoraInicioEvento.setText("");
        jDateTerminoEvento.setDate(null);
        jFormattedtxtHoraTerminoEvento.setText("");
        
        

        conectaEvento.conexao();

        conectaEvento.executaSQL("SELECT * FROM EVENTOS WHERE NOME_EVENTO = '" + nome_evento + "'");

        
        try {
       
            conectaEvento.rs.first();

            txtCodEvento.setText(String.valueOf(conectaEvento.rs.getInt("COD_EVENTO")));
            txtNomeDoEvento.setText(conectaEvento.rs.getString("NOME_EVENTO"));
            txtRuaEvento.setText(conectaEvento.rs.getString("AV_RUA_EVENTO"));
            txtNumeroEvento.setText(conectaEvento.rs.getString("NUM_EVENTO"));
            jFormattedtxtCepEvento.setText(conectaEvento.rs.getString("CEP_EVENTO"));
            txtComplementoEvento.setText(conectaEvento.rs.getString("COMPLEMENTO_EVENTO"));
            txtBairroEvento.setText(conectaEvento.rs.getString("BAIRRO_EVENTO"));
            txtCidadeEvento.setText(conectaEvento.rs.getString("CIDADE_EVENTO"));
            jComboBoxEstadoEvento.setSelectedItem(conectaEvento.rs.getString("ESTADO_EVENTO"));
            jDateInicioEvento.setDate(conectaEvento.rs.getDate("DATA_INICIO_EVENTO"));
            jFormattedtxtHoraInicioEvento.setText(conectaEvento.rs.getString("HORA_INICIO_EVENTO"));
            jDateTerminoEvento.setDate(conectaEvento.rs.getDate("DATA_FIM_EVENTO"));
            jFormattedtxtHoraTerminoEvento.setText(conectaEvento.rs.getString("HORA_FIM_EVENTO"));
            
            conectaCategoriaEventos.conexao();
            conectaCategoriaEventos.executaSQL("SELECT * FROM CATEGORIA_EVENTOS WHERE COD_CATEVEN ='"+conectaEvento.rs.getInt("COD_CATEVEN")+"'");
            conectaCategoriaEventos.rs.first();
            jComboBoxCategoriaEvento.setSelectedItem(conectaCategoriaEventos.rs.getString("NOME_CATEVEN"));
            conectaCategoriaEventos.desconecta();
            
            conectaEvento.desconecta();

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao seleciona os dados!");
            // JOptionPane.showMessageDialog(rootPane, "Erro ao seleciona os dados! \n ERRO: " + ex);
 
        }

         //conectaEvento.desconecta();
        
        
    }//GEN-LAST:event_jTableEventoMouseClicked

    private void txtCampoPesquisaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCampoPesquisaEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCampoPesquisaEventoActionPerformed

    private void btnAdicionarCatEvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarCatEvenActionPerformed
        // BOTÂO ADICIONAR CATEGORIA DE EVENTO
 
        if (frmCatEven == null) {

            frmCatEven = new FrmCategoriaEventos();

        }

        frmCatEven.setVisible(true);
        
        dispose();
        
    }//GEN-LAST:event_btnAdicionarCatEvenActionPerformed

    
    public void preencherComboCategoriaEvento() {
        
        conectaEvento.conexao();
        
        conectaEvento.executaSQL("SELECT * FROM CATEGORIA_EVENTOS ORDER BY NOME_CATEVEN");
        
        // REMOVE TODOS OS ITENS DA COMOBOX QUE VEM POR PADRAO PARA PODER ARMAZENAR OS ITENS QUE VEM DA BASE DE DADOS
        jComboBoxCategoriaEvento.removeAllItems();
        
        try {
            
            conectaEvento.rs.first();
            
            do{
               
                jComboBoxCategoriaEvento.addItem(conectaEvento.rs.getString("NOME_CATEVEN"));
                
            }while(conectaEvento.rs.next());
            
        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher categoria do evento \n ERROR: " + ex);
            
        }
        
        conectaEvento.desconecta();
        
        
    }
    
    
    
     public void preencherTabelaEvento(String SQL) {
        
        ArrayList dados = new ArrayList();
        
        String[] Colunas = new String[] {"Cod","Nome do Evento","Data Inicio","Hora Inicio","Data Termino","Categoria" };
        
        conectaEvento.conexao();
        
        conectaEvento.executaSQL(SQL);
        
        // conectaCategoriaEventos.conexao();
        
        // conectaCategoriaEventos.executaSQL(SQL);
        
        try {
            
            conectaEvento.rs.first();  
            
            // conectaCategoriaEventos.executaSQL("SELECT * FROM CATEGORIA_EVENTOS WHERE COD_CATEVEN ='" + conectaEvento.rs.getInt("COD_EVENTO") +"'");

            // conectaCategoriaEventos.rs.first();

              
            
            // jComboBoxCategoriaEvento.setSelectedItem(conectaCategoriaEventos.rs.getString("NOME_CATEVEN"));
            
            
            do {
                
                dados.add(new Object[]{conectaEvento.rs.getInt("COD_EVENTO"), 
                    conectaEvento.rs.getString("NOME_EVENTO"), 
                    conectaEvento.rs.getDate("DATA_INICIO_EVENTO"), 
                    conectaEvento.rs.getString("HORA_INICIO_EVENTO"),
                    conectaEvento.rs.getDate("DATA_FIM_EVENTO"),
                    conectaEvento.rs.getInt("COD_CATEVEN") });
            
               }while(conectaEvento.rs.next());
            
        } catch (SQLException e) {

            // JOptionPane.showMessageDialog(rootPane, "Erro ao preencher lista de eventos!");
            // JOptionPane.showMessageDialog(rootPane, "Erro ao preencher lista de eventos! \n ERRO: " + e);

        }
        
        
        
        ModelTabela mtabelaEvento = new ModelTabela(dados, Colunas);
        
        jTableEvento.setModel(mtabelaEvento);
        jTableEvento.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTableEvento.getColumnModel().getColumn(0).setResizable(false);
        jTableEvento.getColumnModel().getColumn(1).setPreferredWidth(130);
        jTableEvento.getColumnModel().getColumn(1).setResizable(false);
        jTableEvento.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTableEvento.getColumnModel().getColumn(2).setResizable(false);
        jTableEvento.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTableEvento.getColumnModel().getColumn(3).setResizable(false);
        jTableEvento.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTableEvento.getColumnModel().getColumn(4).setResizable(false);
        jTableEvento.getColumnModel().getColumn(5).setPreferredWidth(103);
        jTableEvento.getColumnModel().getColumn(5).setResizable(false);
        jTableEvento.getTableHeader().setReorderingAllowed(false);
        jTableEvento.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTableEvento.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        // conectaEvento.desconecta();
        
    }
     
     
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmEventos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel as;
    private javax.swing.JButton btnAdicionarCatEven;
    private javax.swing.JButton btnAlterarEvento;
    private javax.swing.JButton btnCancelarEvento;
    private javax.swing.JButton btnExcluirEvento;
    private javax.swing.JButton btnNovoEvento;
    private javax.swing.JButton btnPesquisarEvento;
    private javax.swing.JButton btnSairEvento;
    private javax.swing.JButton btnSalvarEvento;
    private javax.swing.JComboBox<String> jComboBoxCategoriaEvento;
    private javax.swing.JComboBox<String> jComboBoxEstadoEvento;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateInicioEvento;
    private com.toedter.calendar.JDateChooser jDateTerminoEvento;
    private javax.swing.JFormattedTextField jFormattedtxtCepEvento;
    private javax.swing.JFormattedTextField jFormattedtxtHoraInicioEvento;
    private javax.swing.JFormattedTextField jFormattedtxtHoraTerminoEvento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableEvento;
    private javax.swing.JTextField txtBairroEvento;
    private javax.swing.JTextField txtCampoPesquisaEvento;
    private javax.swing.JTextField txtCidadeEvento;
    private javax.swing.JTextField txtCodEvento;
    private javax.swing.JTextField txtComplementoEvento;
    private javax.swing.JTextField txtNomeDoEvento;
    private javax.swing.JTextField txtNumeroEvento;
    private javax.swing.JTextField txtRuaEvento;
    // End of variables declaration//GEN-END:variables
}
