/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import controller.ConexaoDB;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
*/

/**
 *
 * @author Luis Carlos O.
 */
public class FrmRelatorios extends javax.swing.JFrame {
    
    ConexaoDB conecta = new ConexaoDB();
    ConexaoDB conectaEvento = new ConexaoDB();
    ConexaoDB conectaProduto = new ConexaoDB();
    float precoTotalDeTodosProdutos = 0;
    int quantItemProdutos = 0;
    
    

    /**
     * Creates new form FrmRelatorios
     */
    public FrmRelatorios() {
        initComponents();
        
        
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/ss.jpg")).getImage());
        
        
        preencherComboNomeEvento();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtDataIn = new javax.swing.JLabel();
        txtHoraIn = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnGerarRelatorioTodosEventos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnGerarRelatorio = new javax.swing.JButton();
        jComboBoxEventoRelatorio = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relat√≥rios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-sair-50.png"))); // NOI18N
        jButton1.setToolTipText("Fechar Janela");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true), "Todos os Eventos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 12))); // NOI18N

        btnGerarRelatorioTodosEventos.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnGerarRelatorioTodosEventos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-treinamento-50.png"))); // NOI18N
        btnGerarRelatorioTodosEventos.setText("Gerar");
        btnGerarRelatorioTodosEventos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGerarRelatorioTodosEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioTodosEventosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addComponent(btnGerarRelatorioTodosEventos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGerarRelatorioTodosEventos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true), "Selecionar Evento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 12))); // NOI18N

        btnGerarRelatorio.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-treinamento-50.png"))); // NOI18N
        btnGerarRelatorio.setText("Gerar");
        btnGerarRelatorio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });

        jComboBoxEventoRelatorio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxEventoRelatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxEventoRelatorio.setToolTipText("");
        jComboBoxEventoRelatorio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxEventoRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEventoRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxEventoRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEventoRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(txtDataIn))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(txtHoraIn))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataIn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtHoraIn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(36, 36, 36))
        );

        setBounds(820, 320, 434, 337);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed
        // BOT√ÉO DE GERAR RELATORIO
        
        /*
        try {
            
            String sql = "SELECT * FROM EVENTOS";
            
            conecta.executaSQL(sql);
            
            JRResultSetDataSource reportResult = new JRResultSetDataSource(conecta.rs);
            
            JasperPrint jpPrint = JasperFillManager.fillReport("report/report1.jasper", new HashMap(), reportResult );
            
            JasperViewer jv = new JasperViewer(jpPrint);
            
            jv.setVisible(true);
            jv.toFront(); // TRAZ O FORMUL√ÅRIO PARA FRENTE DA APLICA√á√ÉO
            
            
        } catch (JRException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o rel√°torio! \n ERROR: " + ex);
            
        }
        */
        
        
        // preencherComboNomeEvento();
        
        
        String nomeDoEvento = jComboBoxEventoRelatorio.getSelectedItem().toString();
        
        
        Document doc = new Document();
        
        
        try {

            PdfWriter.getInstance(doc, new FileOutputStream("Relacao de Produtos do Evento_" + nomeDoEvento +".pdf"));
            
            doc.open();
            
            // doc.setPageSize(PageSize.A4); // DEFINI O TAMANHO DA FOLHA MAS POR PADRAO MESMO SEM DEFINI O TAMAMHO √â GERADO FOLHA A4
            
            // doc.add( new Paragraph("Associa√ß√£o Cultural Il√™ Ax√© Ade Omin Oya")); // ADICIONA PARAGRAFO NO DOCUMENTO
            // doc.add( new Paragraph(" "));
            // doc.add( new Paragraph(" "));
            
            
            
            Paragraph titulo = new  Paragraph();
            
            titulo.add("Associa√ß√£o Cultural");
            
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            doc.add(titulo);
            
            doc.add( new Paragraph(" "));
            doc.add( new Paragraph(" "));
            
            
            PdfPTable tabela = new PdfPTable(5);
            
            PdfPCell cabecalho = new PdfPCell (new Paragraph("Lista de Produtos Necess√°rio para Realiza√ß√£o do Evento: " + nomeDoEvento ));
            
            cabecalho.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho.setBorder(PdfPCell.NO_BORDER);
            cabecalho.setBackgroundColor(BaseColor.DARK_GRAY);
            cabecalho.setColspan(5);
            
            tabela.addCell(cabecalho);
            tabela.addCell("Codigo");
            tabela.addCell("Nome do Produto");
            tabela.addCell("Tipo de Produto");
            tabela.addCell("Quantidade");
            tabela.addCell("Pre√ßo");
            // tabela.addCell("Total Itens");
            // tabela.addCell("Pre√ßo Total dos Itens");
            
            
            try {
                
                conectaProduto.conexao();

                conectaProduto.executaSQL("SELECT * FROM EVENTOS WHERE NOME_EVENTO = '" + jComboBoxEventoRelatorio.getSelectedItem() + "'");

                conectaProduto.rs.first();

                int codEvento = (conectaProduto.rs.getInt("COD_EVENTO"));
                
                
                // JOptionPane.showMessageDialog(rootPane, "Cod evento: " + codEvento );
                

                // String sql = "SELECT PRODUTOS.COD_PROD,PRODUTOS.DESC_PROD,PRODUTOS.NOME_TIPO,PRODUTOS.QTD_PROD,PRODUTOS.PRECO_PROD FROM PRODUTOS WHERE PRODUTOS.COD_EVENTO =" + codEvento;

                String sql = "SELECT PRODUTOS.COD_PROD,PRODUTOS.DESC_PROD,PRODUTOS.NOME_TIPO,PRODUTOS.QTD_PROD,PRODUTOS.PRECO_PROD FROM PRODUTOS INNER JOIN EVENTOS ON PRODUTOS.COD_EVENTO = EVENTOS.COD_EVENTO WHERE EVENTOS.NOME_EVENTO = '" + jComboBoxEventoRelatorio.getSelectedItem().toString() + "'";
                
                // SELECT PRODUTOS.COD_PROD,PRODUTOS.DESC_PROD,PRODUTOS.NOME_TIPO,PRODUTOS.QTD_PROD,PRODUTOS.PRECO_PROD FROM PRODUTOS INNER JOIN EVENTOS ON PRODUTOS.COD_EVENTO = eventos.cod_evento
                // SELECT PRODUTOS.COD_PROD,PRODUTOS.DESC_PROD,PRODUTOS.NOME_TIPO,PRODUTOS.QTD_PROD,PRODUTOS.PRECO_PROD FROM PRODUTOS INNER JOIN EVENTOS ON PRODUTOS.COD_EVENTO = eventos.cod_evento where eventos.nome_evento = 'teste2'
                // SELECT PRODUTOS.COD_PROD,PRODUTOS.DESC_PROD,PRODUTOS.NOME_TIPO,PRODUTOS.QTD_PROD,PRODUTOS.PRECO_PROD FROM PRODUTOS INNER JOIN EVENTOS ON PRODUTOS.COD_EVENTO = EVENTOS.cod_evento WHERE EVENTOS.NOME_EVENTO = 'tazzzzzz'

                
                conectaProduto.executaSQL(sql);
                
                conectaProduto.rs.first();
                
                
                while (conectaProduto.rs.next()) {
                    
                    tabela.addCell(conectaProduto.rs.getString("COD_PROD"));
                    tabela.addCell(conectaProduto.rs.getString("DESC_PROD"));
                    tabela.addCell(conectaProduto.rs.getString("NOME_TIPO"));
                    tabela.addCell(conectaProduto.rs.getString("QTD_PROD"));
                    
                    float precoProduto = Float.parseFloat(conectaProduto.rs.getString("PRECO_PROD")); 
                    
                    // tabela.addCell(conectaProduto.rs.getString("PRECO_PROD"));
                    
                    tabela.addCell("" + precoProduto);
                    
                    // JOptionPane.showMessageDialog(rootPane, "preProduto " +precoProduto);
                    
                     precoTotalDeTodosProdutos += (conectaProduto.rs.getFloat("PRECO_PROD") * conectaProduto.rs.getInt("QTD_PROD"));
                    
                     quantItemProdutos++;
                    
                }
                
                
                /*
                do {
                    
                    tabela.addCell(conectaProduto.rs.getString("COD_PROD"));
                    tabela.addCell(conectaProduto.rs.getString("DESC_PROD"));
                    tabela.addCell(conectaProduto.rs.getString("NOME_TIPO"));
                    tabela.addCell(conectaProduto.rs.getString("QTD_PROD"));
                    tabela.addCell(conectaProduto.rs.getString("PRECO_PROD"));
                    
                    // precoTotalDeTodosProdutos = precoTotalDeTodosProdutos + conectaProduto.rs.getFloat("PRECO_PROD") * conectaProduto.rs.getInt("QTD_PROD");
                    
                    // quantItemProdutos++;
                    
                } while( conectaProduto.rs.next() );
                */
                
                conectaProduto.desconecta();
                
                
            } catch (SQLException ex) {
                
                // JOptionPane.showMessageDialog(rootPane, "Erro ao carregar produtos do evento selecionado! \n ERROR: " + ex);
                
                conectaProduto.desconecta();
                
            }

            
            tabela.addCell(""+quantItemProdutos);
            tabela.addCell(""+precoTotalDeTodosProdutos);
            
            
            doc.add(tabela);
            
            
            // doc.add( new Paragraph(" "));
            // doc.add( new Paragraph(" "));
            
            
            
            if ( quantItemProdutos == 0 ) {
                    
                    JOptionPane.showMessageDialog(rootPane, "Erro ao carregar produtos do evento selecionado!");
                    
            } else {
            
            // ADICIONANDO SEGUNDA TABELA PARA NUMEROS DE ITENS E PRE√áO TOTAL DE PRODUTOS
            PdfPTable tabela2 = new PdfPTable(2);
            
            PdfPCell cabecalho2 = new PdfPCell (new Paragraph(" . . . "));
            
            cabecalho2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho2.setBorder(PdfPCell.NO_BORDER);
            cabecalho2.setBackgroundColor(BaseColor.CYAN);
            cabecalho2.setColspan(2);
            
            
            tabela2.addCell(cabecalho2);
            tabela2.addCell("                    Total de Itens"); // 30 ESPA√áOS
            tabela2.addCell("          Pre√ßo Total dos Produtos"); // 10 ESPA√áOS
            
            tabela2.addCell("                              " +quantItemProdutos); // 30 ESPA√áOS
            tabela2.addCell("                              " +precoTotalDeTodosProdutos); // 30 ESPA√áOS
            
            doc.add(tabela2);
            
            }
            
            
            // ZERANDO VARIAVEIS
            quantItemProdutos = 0;
            precoTotalDeTodosProdutos = 0;
            
            
            // JOptionPane.showMessageDialog(rootPane, "Total de Itens: " + quantItemProdutos + "\n Pre√ßo Total dos Produtos" +precoTotalDeTodosProdutos);
            
            
            // doc.newPage(); // ADICIONA UMA NOVA PAGINA
            
            
        } catch (FileNotFoundException | DocumentException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "Erro ao gerar relat√≥rio \n ERROR: " + ex);
            
        } finally {
            
            // JOptionPane.showMessageDialog(rootPane, "Arquivo gerado com sucesso!");
            doc.close();
            
        }
        
        
        // JOptionPane.showMessageDialog(rootPane, "itens Total: " + quantItemProdutos + "pre√ßo toal: " +precoTotalDeTodosProdutos);
        
        
        // /*
        try {
            
            Desktop.getDesktop().open(new File("Relacao de Produtos do Evento_" + nomeDoEvento +".pdf"));
            
        } catch (IOException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "Erro ao abrir relat√≥rio \n ERROR: " + ex);
            
        }
        // */
        
        
        
    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void jComboBoxEventoRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEventoRelatorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEventoRelatorioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOT√ÉO SAIR
        
        dispose();
        
        preencherComboNomeEvento();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       
    }//GEN-LAST:event_formWindowOpened

    private void btnGerarRelatorioTodosEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioTodosEventosActionPerformed
        // BOT√ÇO GERAR RELATORIO DE TODOS OS EVENTOS
        
        
        // preencherComboNomeEvento();
        
        
        Document doc2 = new Document();
        
        
        try {

            PdfWriter.getInstance(doc2, new FileOutputStream("EventosCadastrados.pdf"));
            
            doc2.open();
            
            Paragraph titulo = new  Paragraph();
            
            titulo.add("Associa√ß√£o Cultural");
            
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            doc2.add(titulo);
            
            doc2.add( new Paragraph(" "));
            
            doc2.add( new Paragraph(" "));
            
            PdfPTable tabela = new PdfPTable(5);
            
            PdfPCell cabecalho = new PdfPCell (new Paragraph("Lista de Eventos Cadastrado"));
            
            cabecalho.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho.setBorder(PdfPCell.NO_BORDER);
            cabecalho.setBackgroundColor(BaseColor.DARK_GRAY);
            cabecalho.setColspan(5);
          
            
            tabela.addCell(cabecalho);
            tabela.addCell("Codigo");
            tabela.addCell("Nome do Evento");
            tabela.addCell("Data Inicio");
            tabela.addCell("Data Fim");
            tabela.addCell("Hora de Inicio");
            
            
            try {
                
                conectaEvento.conexao();

                String sql = "SELECT * FROM EVENTOS";

                conectaEvento.executaSQL(sql);
                
                // conectaEvento.rs.first(); // TIRANDO ISSO OU FIRST TRAZ O PRIMEIRO EVENTO QUE N√ÉO TAVA TRAZENDO NO RELATORIO
                
                while (conectaEvento.rs.next()) {
                    
                    tabela.addCell(conectaEvento.rs.getString("COD_EVENTO"));
                    tabela.addCell(conectaEvento.rs.getString("NOME_EVENTO"));
                    tabela.addCell(conectaEvento.rs.getString("DATA_INICIO_EVENTO"));
                    tabela.addCell(conectaEvento.rs.getString("DATA_FIM_EVENTO"));
                    tabela.addCell(conectaEvento.rs.getString("HORA_INICIO_EVENTO"));
                    
                }
                
                conectaEvento.desconecta();
                
            } catch (SQLException ex) {
                
                // JOptionPane.showMessageDialog(rootPane, "Erro ao carregar eventos cadastrado!");
                JOptionPane.showMessageDialog(rootPane, "Erro ao carregar eventos cadastrado! \n ERROR: " + ex);
                conectaEvento.desconecta();
            }
            
            
            tabela.setHorizontalAlignment(Element.ALIGN_CENTER);
                    
            doc2.add(tabela);
                 
            
        } catch (FileNotFoundException | DocumentException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "Erro ao gerar relat√≥rio \n ERROR: " + ex);
            
        } finally {
            
            JOptionPane.showMessageDialog(rootPane, "Arquivo gerado com sucesso!");
            doc2.close();
            
        }
        
        
        
        // /*
        try {
            
            Desktop.getDesktop().open(new File("EventosCadastrados.pdf"));
            
        } catch (IOException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "Erro ao abrir relat√≥rio \n ERROR: " + ex);
            
        }
       // */
        
        
        
        
    }//GEN-LAST:event_btnGerarRelatorioTodosEventosActionPerformed

    
    
    public void preencherComboNomeEvento() {

        conectaEvento.conexao();

        conectaEvento.executaSQL("SELECT * FROM EVENTOS ORDER BY NOME_EVENTO");

        // REMOVE TODOS OS ITENS DA COMOBOX QUE VEM POR PADRAO PARA PODER ARMAZENAR OS ITENS QUE VEM DA BASE DE DADOS
        jComboBoxEventoRelatorio.removeAllItems();

        try {

            conectaEvento.rs.first();

            do {

                jComboBoxEventoRelatorio.addItem(conectaEvento.rs.getString("NOME_EVENTO"));

            } while (conectaEvento.rs.next());

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher nome dos eventos");
            // JOptionPane.showMessageDialog(rootPane, "Erro ao preencher nome dos evento \n ERROR: " + ex);

        }

        conectaEvento.desconecta();

    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmRelatorios().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerarRelatorio;
    private javax.swing.JButton btnGerarRelatorioTodosEventos;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxEventoRelatorio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel txtDataIn;
    private javax.swing.JLabel txtHoraIn;
    // End of variables declaration//GEN-END:variables

}

